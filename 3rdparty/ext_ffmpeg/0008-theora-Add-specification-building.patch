From 0d563f56e5e348282ca67811958003ce34f74c95 Mon Sep 17 00:00:00 2001
From: "L. E. Segovia" <amy@amyspark.me>
Date: Sat, 26 Nov 2022 13:20:00 +0000
Subject: [PATCH 08/11] theora: Add specification building

---
 doc/spec/check-needed-tex-packages.py | 10 ++++
 doc/spec/latexmk-wrapper.py           | 17 +++++++
 doc/spec/meson.build                  | 66 ++++++++++++++++++++++++
 doc/spec/test-tex-packages.py         | 27 ++++++++++
 meson.build                           | 73 +++++++++++++++++++++++++++
 meson_options.txt                     |  1 +
 6 files changed, 194 insertions(+)
 create mode 100644 doc/spec/check-needed-tex-packages.py
 create mode 100644 doc/spec/latexmk-wrapper.py
 create mode 100644 doc/spec/meson.build
 create mode 100644 doc/spec/test-tex-packages.py

diff --git a/doc/spec/check-needed-tex-packages.py b/doc/spec/check-needed-tex-packages.py
new file mode 100644
index 0000000..f541aa0
--- /dev/null
+++ b/doc/spec/check-needed-tex-packages.py
@@ -0,0 +1,10 @@
+#!/usr/bin/env python3
+
+import re
+
+if __name__ == '__main__':
+    with open('doc/spec/spec.tex', 'r') as f:
+        packages = [x for x in re.findall(
+            r'\\usepackage\{(.+)\}', f.read()) if x != "ltablex"]
+        for x in packages:
+            print(x)
diff --git a/doc/spec/latexmk-wrapper.py b/doc/spec/latexmk-wrapper.py
new file mode 100644
index 0000000..c0d9233
--- /dev/null
+++ b/doc/spec/latexmk-wrapper.py
@@ -0,0 +1,17 @@
+#!/usr/bin/env python3
+
+from argparse import ArgumentParser
+from pathlib import Path
+from subprocess import run
+
+if __name__ == '__main__':
+    parser = ArgumentParser()
+    parser.add_argument('latexmk', type=Path)
+    parser.add_argument('src_file', type=Path)
+    args = parser.parse_args()
+
+    latexmk = args.latexmk
+    src = args.src_file
+
+    run([latexmk, '-pdf', src.name],
+        capture_output=True, cwd=src.parent, check=True)
diff --git a/doc/spec/meson.build b/doc/spec/meson.build
new file mode 100644
index 0000000..31bc8d5
--- /dev/null
+++ b/doc/spec/meson.build
@@ -0,0 +1,66 @@
+fig_sources = {
+  'pic-frame.pdf': files('pic-frame.fig'),
+  'hilbert-mb.pdf': files('hilbert-mb.fig'),
+  'hilbert-block.pdf': files('hilbert-block.fig'),
+  'xifish.pdf': files('xifish.fig'),
+  'superblock.pdf': files('superblock.fig'),
+  'macroblock.pdf': files('macroblock.fig'),
+  'raster-block.pdf': files('raster-block.fig'),
+  'reference-frames.pdf': files('reference-frames.fig'),
+  'pixel444.pdf': files('pixel444.fig'),
+  'pixel422.pdf': files('pixel422.fig'),
+  'pixel420.pdf': files('pixel420.fig'),
+  'idct.pdf': files('idct.fig'),
+  'fdct.pdf': files('fdct.fig'),
+  'pic_even.pdf': files('pic_even.fig'),
+  'pic_even_odd.pdf': files('pic_even_odd.fig'),
+  'pic_odd.pdf': files('pic_odd.fig'),
+  'pic_odd_even.pdf': files('pic_odd_even.fig'),
+  'lflim.pdf': files('lflim.fig'),
+}
+
+fig_pdfs = []
+
+foreach fig_name, fig_source : fig_sources
+  pdf = custom_target(
+    fig_name,
+    command: [transfig_exe, '-L', 'pdf', '@INPUT@'],
+    output: fig_name,
+    input: fig_source,
+    capture: true,
+  )
+  fig_pdfs += [pdf]
+endforeach
+
+vp3huff_sources = files('vp3huff.c')
+
+vp3huff_exe = executable(
+  'vp3huff',
+  vp3huff_sources,
+  native: true,
+  install: false,
+)
+
+vp3huff_tex = custom_target(
+  'vp3huff.tex',
+  command: [vp3huff_exe],
+  capture: true,
+  output: 'vp3huff.tex',
+)
+
+spec_file = configure_file(input: 'spec.tex', output: 'spec.tex', copy: true)
+bib_file = configure_file(input: 'spec.bib', output: 'spec.bib', copy: true)
+
+latexmk_wrapper = find_program('latexmk-wrapper.py', required: true)
+
+built_docs = custom_target(
+  'Theora.pdf',
+  command: [latexmk_wrapper, latexmk_exe, '@INPUT@'],
+  console: true,
+  input: [spec_file],
+  depend_files: [bib_file],
+  depends: [fig_pdfs, vp3huff_tex],
+  output: 'Theora.pdf',
+  install: true,
+  install_dir: get_option('datadir') / 'doc' / meson.project_name(),
+)
diff --git a/doc/spec/test-tex-packages.py b/doc/spec/test-tex-packages.py
new file mode 100644
index 0000000..c5f64ff
--- /dev/null
+++ b/doc/spec/test-tex-packages.py
@@ -0,0 +1,27 @@
+#!/usr/bin/env python3
+
+from argparse import ArgumentParser
+from pathlib import Path
+from subprocess import run
+from sys import stdout, stderr
+from tempfile import TemporaryDirectory
+
+if __name__ == '__main__':
+    parser = ArgumentParser(description='Tests for installed TeX packages')
+    parser.add_argument('--pdflatex', type=Path)
+    parser.add_argument('package')
+    args = parser.parse_args()
+
+    with TemporaryDirectory() as tmp:
+        test = Path(f'{tmp}/test.tex')
+
+        with test.open(mode='w', encoding='utf-8') as f:
+            f.write('\\documentclass{book}\n')
+            f.write('\\usepackage{%s}\n' % args.package)
+            f.write('\\begin{document}\n')
+            f.write('Hello World.\n')
+            f.write('\\end{document}\n')
+            f.close()
+
+        run([args.pdflatex, '-interaction', 'batchmode', '-halt-on-error',
+            test.absolute()], check=True, stdout=stdout, stderr=stderr, cwd=tmp)
diff --git a/meson.build b/meson.build
index 6a8fa25..2c83f8a 100644
--- a/meson.build
+++ b/meson.build
@@ -140,3 +140,76 @@ if examples.auto() or examples.enabled()
 endif
 
 subdir('tests')
+
+spec = get_option('spec')
+
+if spec.auto() or spec.enabled()
+  # Note: unlike the original autotools script, here we use
+  # latexmk to do the dependency management for us.
+  # This implicates that we've got to copy spec.{tex,bib}
+  # to the build folder in /doc/spec/ to make all files
+  # live in the same folder.
+  latexmk_exe = find_program('latexmk', required: spec)
+  transfig_exe = find_program('fig2dev', required: spec)
+  # used indirectly by latexmk
+  pdflatex = find_program('pdflatex', required: spec)
+  bibtex = find_program('bibtex', required: spec)
+
+  if (
+    latexmk_exe.found()
+    and pdflatex.found()
+    and bibtex.found()
+    and transfig_exe.found()
+  )
+    check_needed_tex_packages = find_program(
+      'doc/spec/check-needed-tex-packages.py',
+      required: true,
+    )
+    test_tex_packages = find_program(
+      'doc/spec/test-tex-packages.py',
+      required: true,
+    )
+
+    message(
+      'Checking for packages in @0@...'.format(
+        meson.current_source_dir() / 'doc/spec/spec.tex',
+      ),
+    )
+
+    packages = run_command(
+      check_needed_tex_packages,
+      capture: true,
+      check: true,
+    ).stdout().split()
+
+    tex_pkg_ok = true
+
+    foreach pkg : packages
+      message('for Tex package @0@'.format(pkg))
+
+      pkg_test = run_command(test_tex_packages, '--pdflatex', pdflatex, pkg)
+      if pkg_test.returncode() != 0
+        message = 'The \'@0@\' TeX package is missing or broken'.format(pkg)
+
+        if spec.enabled()
+          error(message)
+        else
+          warning(message)
+          tex_pkg_ok = false
+        endif
+        break
+      endif
+    endforeach
+  else
+    tex_pkg_ok = false
+  endif
+
+  if tex_pkg_ok and meson.project_version() > '1.2.0alpha1'
+    # libtheora <= 1.2.0alpha1 has a tex file which is incompatible
+    # with TeX distributions < 2015 at the least.
+    # See commit fbb275803696085225c310773474ef4dcf8a4528.
+    subdir('doc/spec')
+  else
+    message('*** Format Specification will not be built.')
+  endif
+endif
diff --git a/meson_options.txt b/meson_options.txt
index 4bac75a..5af886d 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -1,3 +1,4 @@
+option('spec', type: 'feature', value: 'auto', description: 'Build the specification')
 option('valgrind-testing', type: 'feature', value: 'disabled', description: 'Enable running of tests inside Valgrind')
 option('asm', type: 'feature', value: 'enabled', description: 'Enable assembly optimizations')
 option('telemetry', type: 'feature', value: 'disabled', description: 'Enable debugging output controls')
-- 
2.37.1.windows.1

