From 0c7649c5073b332084b433fa7d475952a794750a Mon Sep 17 00:00:00 2001
From: "L. E. Segovia" <amy@amyspark.me>
Date: Fri, 25 Nov 2022 21:58:40 +0000
Subject: [PATCH 04/11] theora: Add tests

---
 include/meson.build |   2 +-
 meson.build         |  19 ++++++++
 meson_options.txt   |   1 +
 tests/meson.build   | 114 ++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 135 insertions(+), 1 deletion(-)
 create mode 100644 tests/meson.build

diff --git a/include/meson.build b/include/meson.build
index 8db4ab7..631dd10 100644
--- a/include/meson.build
+++ b/include/meson.build
@@ -7,4 +7,4 @@ theorainclude_headers = files(
 
 install_headers(theorainclude_headers, subdir: 'theora')
 
-incdir = include_directories('.')
+incdir = include_directories('.', '..')
diff --git a/meson.build b/meson.build
index a7515a8..c53c1b8 100644
--- a/meson.build
+++ b/meson.build
@@ -10,6 +10,23 @@ project(
 
 conf = configuration_data()
 
+valgrind_testing = get_option('valgrind-testing')
+
+valgrind_exe = find_program('valgrind', required: valgrind_testing)
+
+if valgrind_exe.found()
+  add_test_setup(
+    'valgrind',
+    exe_wrapper: [
+      valgrind_exe,
+      '-q',
+      '--leak-check=yes',
+      '--show-reachable=yes',
+      '--num-callers=100',
+    ],
+  )
+endif
+
 compile_args = []
 
 cc = meson.get_compiler('c')
@@ -57,3 +74,5 @@ windows = import('windows')
 subdir('include')
 
 subdir('lib')
+
+subdir('tests')
diff --git a/meson_options.txt b/meson_options.txt
index 8df708d..25dbc88 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -1,2 +1,3 @@
+option('valgrind-testing', type: 'feature', value: 'disabled', description: 'Enable running of tests inside Valgrind')
 option('asm', type: 'feature', value: 'enabled', description: 'Enable assembly optimizations')
 option('collect-metrics', type: 'boolean', value: 'false', description: 'Enable metrics collection for mode training')
diff --git a/tests/meson.build b/tests/meson.build
new file mode 100644
index 0000000..2f08129
--- /dev/null
+++ b/tests/meson.build
@@ -0,0 +1,114 @@
+theora_libs = [libtheora]
+theoradec_libs = [libtheoradec]
+theoraenc_libs = [libtheoraenc, libtheoradec]
+
+tests = {}
+
+# dummy call tests for the current api
+noop = executable(
+  'noop',
+  files('noop.c'),
+  c_args: compile_args,
+  link_with: theoraenc_libs,
+  dependencies: [m_dep, ogg_dep, config_dep],
+  include_directories: incdir,
+)
+
+tests += {'noop': noop}
+
+# dummy call tests for the pre-1.0 legacy api with current link line
+noop_theoraenc = executable(
+  'noop_theoraenc',
+  files('noop_theora.c'),
+  c_args: compile_args,
+  link_with: theoraenc_libs,
+  dependencies: [m_dep, ogg_dep, config_dep],
+  include_directories: incdir,
+)
+
+tests += {'noop_theoraenc': noop_theoraenc}
+
+# dummy call tests for the pre-1.0 legacy api with legacy link line
+noop_theora = executable(
+  'noop_theora',
+  files('noop_theora.c'),
+  c_args: compile_args,
+  link_with: theora_libs,
+  dependencies: [m_dep, ogg_dep, config_dep],
+  include_directories: incdir,
+)
+
+tests += {'noop_theora': noop_theora}
+
+# comment utilities for the current api
+comment = executable(
+  'comment',
+  files('comment.c'),
+  c_args: compile_args,
+  link_with: theoradec_libs,
+  dependencies: [m_dep, ogg_dep, config_dep],
+  include_directories: incdir,
+)
+
+tests += {'comment': comment}
+
+# comment utilities for the legacy api and current lib
+comment_theoradec = executable(
+  'comment_theoradec',
+  files('comment.c'),
+  c_args: compile_args,
+  link_with: theoradec_libs,
+  dependencies: [m_dep, ogg_dep, config_dep],
+  include_directories: incdir,
+)
+
+tests += {'comment_theoradec': comment_theoradec}
+
+# comment utilities for the legacy api and legacy lib
+comment_theora = executable(
+  'comment_theora',
+  files('comment_theora.c'),
+  c_args: compile_args,
+  link_with: theora_libs,
+  dependencies: [m_dep, ogg_dep, config_dep],
+  include_directories: incdir,
+)
+
+tests += {'comment_theora': comment_theora}
+
+granulepos = executable(
+  'granulepos',
+  files('granulepos.c'),
+  c_args: compile_args,
+  link_with: theoraenc_libs,
+  dependencies: [m_dep, ogg_dep, config_dep],
+  include_directories: incdir,
+)
+
+tests += {'granulepos': granulepos}
+
+granulepos_theoraenc = executable(
+  'granulepos_theoraenc',
+  files('granulepos_theora.c'),
+  c_args: compile_args,
+  link_with: theoraenc_libs,
+  dependencies: [m_dep, ogg_dep, config_dep],
+  include_directories: incdir,
+)
+
+tests += {'granulepos_theoraenc': granulepos_theoraenc}
+
+granulepos_theora = executable(
+  'granulepos_theora',
+  files('granulepos_theora.c'),
+  c_args: compile_args,
+  link_with: theora_libs,
+  dependencies: [m_dep, ogg_dep, config_dep],
+  include_directories: incdir,
+)
+
+tests += {'granulepos_theora': granulepos_theora}
+
+foreach name, exe : tests
+  test(name, exe)
+endforeach
-- 
2.37.1.windows.1

